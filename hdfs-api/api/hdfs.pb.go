// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.21.12
// source: hdfs.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// file creation primitives
type CreateFileStatus int32

const (
	CreateFileStatus_STATUS_UNSPECIFIED CreateFileStatus = 0 // Default value, unspecified status
	CreateFileStatus_SUCCESS            CreateFileStatus = 1 // File creation succeeded
	CreateFileStatus_FAILURE            CreateFileStatus = 2 // File creation failed
)

// Enum value maps for CreateFileStatus.
var (
	CreateFileStatus_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "SUCCESS",
		2: "FAILURE",
	}
	CreateFileStatus_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"SUCCESS":            1,
		"FAILURE":            2,
	}
)

func (x CreateFileStatus) Enum() *CreateFileStatus {
	p := new(CreateFileStatus)
	*p = x
	return p
}

func (x CreateFileStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateFileStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_hdfs_proto_enumTypes[0].Descriptor()
}

func (CreateFileStatus) Type() protoreflect.EnumType {
	return &file_hdfs_proto_enumTypes[0]
}

func (x CreateFileStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateFileStatus.Descriptor instead.
func (CreateFileStatus) EnumDescriptor() ([]byte, []int) {
	return file_hdfs_proto_rawDescGZIP(), []int{0}
}

type HeartBeatStatus int32

const (
	HeartBeatStatus_DEFAULT HeartBeatStatus = 0
	HeartBeatStatus_OK      HeartBeatStatus = 1
)

// Enum value maps for HeartBeatStatus.
var (
	HeartBeatStatus_name = map[int32]string{
		0: "DEFAULT",
		1: "OK",
	}
	HeartBeatStatus_value = map[string]int32{
		"DEFAULT": 0,
		"OK":      1,
	}
)

func (x HeartBeatStatus) Enum() *HeartBeatStatus {
	p := new(HeartBeatStatus)
	*p = x
	return p
}

func (x HeartBeatStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HeartBeatStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_hdfs_proto_enumTypes[1].Descriptor()
}

func (HeartBeatStatus) Type() protoreflect.EnumType {
	return &file_hdfs_proto_enumTypes[1]
}

func (x HeartBeatStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HeartBeatStatus.Descriptor instead.
func (HeartBeatStatus) EnumDescriptor() ([]byte, []int) {
	return file_hdfs_proto_rawDescGZIP(), []int{1}
}

type FileAction int32

const (
	FileAction_UNSPECIFIED  FileAction = 0
	FileAction_UPLOAD_CHUNK FileAction = 1
	FileAction_REGISTER     FileAction = 2
)

// Enum value maps for FileAction.
var (
	FileAction_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "UPLOAD_CHUNK",
		2: "REGISTER",
	}
	FileAction_value = map[string]int32{
		"UNSPECIFIED":  0,
		"UPLOAD_CHUNK": 1,
		"REGISTER":     2,
	}
)

func (x FileAction) Enum() *FileAction {
	p := new(FileAction)
	*p = x
	return p
}

func (x FileAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileAction) Descriptor() protoreflect.EnumDescriptor {
	return file_hdfs_proto_enumTypes[2].Descriptor()
}

func (FileAction) Type() protoreflect.EnumType {
	return &file_hdfs_proto_enumTypes[2]
}

func (x FileAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileAction.Descriptor instead.
func (FileAction) EnumDescriptor() ([]byte, []int) {
	return file_hdfs_proto_rawDescGZIP(), []int{2}
}

type FileChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`                                   // chunk data
	ChunkNumber int64  `protobuf:"varint,2,opt,name=chunk_number,json=chunkNumber,proto3" json:"chunk_number,omitempty"` // chunk number for ordering
	IsLast      bool   `protobuf:"varint,3,opt,name=is_last,json=isLast,proto3" json:"is_last,omitempty"`                // indicates whether the given chunk is the last chunk
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_hdfs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_hdfs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_hdfs_proto_rawDescGZIP(), []int{0}
}

func (x *FileChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileChunk) GetChunkNumber() int64 {
	if x != nil {
		return x.ChunkNumber
	}
	return 0
}

func (x *FileChunk) GetIsLast() bool {
	if x != nil {
		return x.IsLast
	}
	return false
}

type CreateFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName    string     `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`           // name of the file to be created
	Chunk       *FileChunk `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`                                 // chunk of the file
	TotalChunks int64      `protobuf:"varint,3,opt,name=total_chunks,json=totalChunks,proto3" json:"total_chunks,omitempty"` // number of total chunks
}

func (x *CreateFileRequest) Reset() {
	*x = CreateFileRequest{}
	mi := &file_hdfs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileRequest) ProtoMessage() {}

func (x *CreateFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdfs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileRequest.ProtoReflect.Descriptor instead.
func (*CreateFileRequest) Descriptor() ([]byte, []int) {
	return file_hdfs_proto_rawDescGZIP(), []int{1}
}

func (x *CreateFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CreateFileRequest) GetChunk() *FileChunk {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *CreateFileRequest) GetTotalChunks() int64 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

type CreateFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string           `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`         // name of the file created
	Status   CreateFileStatus `protobuf:"varint,2,opt,name=status,proto3,enum=hdfs.CreateFileStatus" json:"status,omitempty"` // status of file creation
}

func (x *CreateFileResponse) Reset() {
	*x = CreateFileResponse{}
	mi := &file_hdfs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileResponse) ProtoMessage() {}

func (x *CreateFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdfs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileResponse.ProtoReflect.Descriptor instead.
func (*CreateFileResponse) Descriptor() ([]byte, []int) {
	return file_hdfs_proto_rawDescGZIP(), []int{2}
}

func (x *CreateFileResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CreateFileResponse) GetStatus() CreateFileStatus {
	if x != nil {
		return x.Status
	}
	return CreateFileStatus_STATUS_UNSPECIFIED
}

// heart beat primitives
type DataNodeFileMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string  `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Chunks   []int64 `protobuf:"varint,2,rep,packed,name=chunks,proto3" json:"chunks,omitempty"`
}

func (x *DataNodeFileMeta) Reset() {
	*x = DataNodeFileMeta{}
	mi := &file_hdfs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataNodeFileMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataNodeFileMeta) ProtoMessage() {}

func (x *DataNodeFileMeta) ProtoReflect() protoreflect.Message {
	mi := &file_hdfs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataNodeFileMeta.ProtoReflect.Descriptor instead.
func (*DataNodeFileMeta) Descriptor() ([]byte, []int) {
	return file_hdfs_proto_rawDescGZIP(), []int{3}
}

func (x *DataNodeFileMeta) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *DataNodeFileMeta) GetChunks() []int64 {
	if x != nil {
		return x.Chunks
	}
	return nil
}

type HeartBeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Meta []*DataNodeFileMeta `protobuf:"bytes,3,rep,name=meta,proto3" json:"meta,omitempty"`
	Size float32             `protobuf:"fixed32,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *HeartBeatRequest) Reset() {
	*x = HeartBeatRequest{}
	mi := &file_hdfs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartBeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatRequest) ProtoMessage() {}

func (x *HeartBeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdfs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatRequest.ProtoReflect.Descriptor instead.
func (*HeartBeatRequest) Descriptor() ([]byte, []int) {
	return file_hdfs_proto_rawDescGZIP(), []int{4}
}

func (x *HeartBeatRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HeartBeatRequest) GetMeta() []*DataNodeFileMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *HeartBeatRequest) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type HeartBeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status HeartBeatStatus `protobuf:"varint,1,opt,name=status,proto3,enum=hdfs.HeartBeatStatus" json:"status,omitempty"`
}

func (x *HeartBeatResponse) Reset() {
	*x = HeartBeatResponse{}
	mi := &file_hdfs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartBeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatResponse) ProtoMessage() {}

func (x *HeartBeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdfs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatResponse.ProtoReflect.Descriptor instead.
func (*HeartBeatResponse) Descriptor() ([]byte, []int) {
	return file_hdfs_proto_rawDescGZIP(), []int{5}
}

func (x *HeartBeatResponse) GetStatus() HeartBeatStatus {
	if x != nil {
		return x.Status
	}
	return HeartBeatStatus_DEFAULT
}

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// data node will initially create a connection to master and send
	// its data
	Id   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`    // data node will uniquely identify itself in the cluster
	New  bool                `protobuf:"varint,2,opt,name=new,proto3" json:"new,omitempty"` // dat anode will set to true so that the master node will allocate this node the name
	Size float32             `protobuf:"fixed32,3,opt,name=size,proto3" json:"size,omitempty"`
	Meta []*DataNodeFileMeta `protobuf:"bytes,4,rep,name=meta,proto3" json:"meta,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_hdfs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdfs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_hdfs_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegisterRequest) GetNew() bool {
	if x != nil {
		return x.New
	}
	return false
}

func (x *RegisterRequest) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RegisterRequest) GetMeta() []*DataNodeFileMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type FileActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// used by master service to stream chunks to data nodes
	Chunk      *FileChunk             `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	FileName   string                 `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Action     FileAction             `protobuf:"varint,3,opt,name=action,proto3,enum=hdfs.FileAction" json:"action,omitempty"`
	Timestamp  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DatanodeId string                 `protobuf:"bytes,5,opt,name=datanodeId,proto3" json:"datanodeId,omitempty"`
}

func (x *FileActionResponse) Reset() {
	*x = FileActionResponse{}
	mi := &file_hdfs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActionResponse) ProtoMessage() {}

func (x *FileActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdfs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileActionResponse.ProtoReflect.Descriptor instead.
func (*FileActionResponse) Descriptor() ([]byte, []int) {
	return file_hdfs_proto_rawDescGZIP(), []int{7}
}

func (x *FileActionResponse) GetChunk() *FileChunk {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *FileActionResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileActionResponse) GetAction() FileAction {
	if x != nil {
		return x.Action
	}
	return FileAction_UNSPECIFIED
}

func (x *FileActionResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *FileActionResponse) GetDatanodeId() string {
	if x != nil {
		return x.DatanodeId
	}
	return ""
}

var File_hdfs_proto protoreflect.FileDescriptor

var file_hdfs_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x68, 0x64,
	0x66, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x5b, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x61,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x61, 0x73, 0x74,
	0x22, 0x7a, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x22, 0x61, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x46, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x22, 0x68, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x64, 0x66, 0x73,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10,
	0x02, 0x22, 0x42, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x73, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x2a,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68,
	0x64, 0x66, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xdb, 0x01, 0x0a, 0x12, 0x46,
	0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61,
	0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x2a, 0x44, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x02, 0x2a, 0x26,
	0x0a, 0x0f, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x01, 0x2a, 0x3d, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f,
	0x43, 0x48, 0x55, 0x4e, 0x4b, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x47, 0x49, 0x53,
	0x54, 0x45, 0x52, 0x10, 0x02, 0x32, 0x56, 0x0a, 0x11, 0x48, 0x64, 0x66, 0x73, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x32, 0xd7, 0x01,
	0x0a, 0x13, 0x48, 0x64, 0x66, 0x73, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x12, 0x16, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42,
	0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x68, 0x64, 0x66,
	0x73, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x15,
	0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x12, 0x44, 0x0a, 0x0d, 0x50, 0x69, 0x70, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x12, 0x16, 0x2e, 0x68, 0x64, 0x66, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42,
	0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x68, 0x64, 0x66,
	0x73, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2e, 0x2f, 0x61, 0x70,
	0x69, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hdfs_proto_rawDescOnce sync.Once
	file_hdfs_proto_rawDescData = file_hdfs_proto_rawDesc
)

func file_hdfs_proto_rawDescGZIP() []byte {
	file_hdfs_proto_rawDescOnce.Do(func() {
		file_hdfs_proto_rawDescData = protoimpl.X.CompressGZIP(file_hdfs_proto_rawDescData)
	})
	return file_hdfs_proto_rawDescData
}

var file_hdfs_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_hdfs_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_hdfs_proto_goTypes = []any{
	(CreateFileStatus)(0),         // 0: hdfs.CreateFileStatus
	(HeartBeatStatus)(0),          // 1: hdfs.HeartBeatStatus
	(FileAction)(0),               // 2: hdfs.FileAction
	(*FileChunk)(nil),             // 3: hdfs.FileChunk
	(*CreateFileRequest)(nil),     // 4: hdfs.CreateFileRequest
	(*CreateFileResponse)(nil),    // 5: hdfs.CreateFileResponse
	(*DataNodeFileMeta)(nil),      // 6: hdfs.DataNodeFileMeta
	(*HeartBeatRequest)(nil),      // 7: hdfs.HeartBeatRequest
	(*HeartBeatResponse)(nil),     // 8: hdfs.HeartBeatResponse
	(*RegisterRequest)(nil),       // 9: hdfs.RegisterRequest
	(*FileActionResponse)(nil),    // 10: hdfs.FileActionResponse
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_hdfs_proto_depIdxs = []int32{
	3,  // 0: hdfs.CreateFileRequest.chunk:type_name -> hdfs.FileChunk
	0,  // 1: hdfs.CreateFileResponse.status:type_name -> hdfs.CreateFileStatus
	6,  // 2: hdfs.HeartBeatRequest.meta:type_name -> hdfs.DataNodeFileMeta
	1,  // 3: hdfs.HeartBeatResponse.status:type_name -> hdfs.HeartBeatStatus
	6,  // 4: hdfs.RegisterRequest.meta:type_name -> hdfs.DataNodeFileMeta
	3,  // 5: hdfs.FileActionResponse.chunk:type_name -> hdfs.FileChunk
	2,  // 6: hdfs.FileActionResponse.action:type_name -> hdfs.FileAction
	11, // 7: hdfs.FileActionResponse.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 8: hdfs.HdfsMasterService.CreateFile:input_type -> hdfs.CreateFileRequest
	7,  // 9: hdfs.HdfsDataNodeService.Heartbeat:input_type -> hdfs.HeartBeatRequest
	9,  // 10: hdfs.HdfsDataNodeService.Connect:input_type -> hdfs.RegisterRequest
	7,  // 11: hdfs.HdfsDataNodeService.PipeHeartbeat:input_type -> hdfs.HeartBeatRequest
	5,  // 12: hdfs.HdfsMasterService.CreateFile:output_type -> hdfs.CreateFileResponse
	8,  // 13: hdfs.HdfsDataNodeService.Heartbeat:output_type -> hdfs.HeartBeatResponse
	10, // 14: hdfs.HdfsDataNodeService.Connect:output_type -> hdfs.FileActionResponse
	8,  // 15: hdfs.HdfsDataNodeService.PipeHeartbeat:output_type -> hdfs.HeartBeatResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_hdfs_proto_init() }
func file_hdfs_proto_init() {
	if File_hdfs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hdfs_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_hdfs_proto_goTypes,
		DependencyIndexes: file_hdfs_proto_depIdxs,
		EnumInfos:         file_hdfs_proto_enumTypes,
		MessageInfos:      file_hdfs_proto_msgTypes,
	}.Build()
	File_hdfs_proto = out.File
	file_hdfs_proto_rawDesc = nil
	file_hdfs_proto_goTypes = nil
	file_hdfs_proto_depIdxs = nil
}
